<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/peakpx"
    tools:context=".MainActivity">


    <TextView
        android:id="@+id/textView3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/ho_technical_university"
        android:textColor="@color/white"
        android:textSize="28sp"
        android:textStyle="bold"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.425"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.083" />

    <RadioGroup
        android:id="@+id/R_Group"
        android:layout_width="379dp"
        android:layout_height="77dp"
        android:background="@drawable/outline"
        android:orientation="horizontal"
        android:textColor="@color/white"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.213">

        <RadioButton
            android:id="@+id/R_Diploma"
            android:layout_width="187dp"
            android:layout_height="match_parent"
            android:text="diploma"
            android:textColor="@color/white"
            android:textSize="23sp"
            android:textStyle="bold" />

        <RadioButton
            android:id="@+id/R_bachelor"
            android:layout_width="191dp"
            android:layout_height="77dp"
            android:text="bachelor"
            android:textColor="@color/white"
            android:textSize="23sp"
            android:textStyle="bold" />
    </RadioGroup>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="383dp"
        android:layout_height="134dp"
        android:background="@drawable/outline"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.473"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.382">

        <TextView
            android:id="@+id/textView13"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/grade2"
            android:textColor="@color/white"
            android:textSize="18sp"
            android:textStyle="bold"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.078"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.28" />

        <TextView
            android:id="@+id/textView14"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/credit_hours2"
            android:textColor="@color/white"

            android:textSize="18sp"
            android:textStyle="bold"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.06"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.787" />

        <EditText
            android:id="@+id/E_grade"
            android:layout_width="228dp"
            android:layout_height="35dp"
            android:autofillHints=""
            android:maxLength="3"
            android:background="@drawable/outline"
            android:ems="10"
            android:hint="@string/grade"
            android:inputType="number"
            android:textAlignment="center"
            android:textColor="@color/white"
            android:textColorHint="@color/white"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.86"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.19" />

        <EditText
            android:id="@+id/E_credit_hours"
            android:layout_width="232dp"
            android:layout_height="46dp"
            android:autofillHints=""
            android:background="@drawable/outline"
            android:ems="10"
            android:gravity="center"


            android:hint="@string/credit_hour"
            android:inputType="number"
            android:maxLength="1"
            android:textAlignment="center"
            android:textColor="@color/white"
            android:textColorHint="@color/white"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.846"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.77" />
    </androidx.constraintlayout.widget.ConstraintLayout>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/constraintLayout2"
        android:layout_width="385dp"
        android:layout_height="128dp"
        android:background="@drawable/outline"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.459"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.585">

        <Button
            android:id="@+id/Buttn_Add"
            android:layout_width="175dp"
            android:layout_height="39dp"
            android:background="@drawable/shape"
            android:text="@string/add"
            android:textSize="18sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.181" />

        <Button
            android:id="@+id/Buttn_Calculate"
            android:layout_width="175dp"
            android:layout_height="39dp"
            android:background="@drawable/shape"
            android:text="@string/calculate"
            android:textSize="18sp"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.734" />

    </androidx.constraintlayout.widget.ConstraintLayout>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="376dp"
        android:layout_height="112dp"
        android:background="@drawable/outline"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.397"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.752">

        <EditText
            android:id="@+id/Edisplay"
            android:layout_width="317dp"
            android:layout_height="84dp"
            android:autofillHints=""
            android:background="@drawable/outline"
            android:ems="10"
            android:enabled="false"
            android:inputType="text"
            android:textAlignment="center"
            android:textColor="@color/black"
            android:textSize="16sp"
            android:textStyle="bold"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.508"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.571" />
    </androidx.constraintlayout.widget.ConstraintLayout>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="380dp"
        android:layout_height="120dp"
        android:background="@drawable/outline"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.392"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.951">

        <Button
            android:id="@+id/Buttn_new"
            android:layout_width="146dp"
            android:layout_height="41dp"
            android:background="@drawable/shape"
            android:text="@string/new1"
            android:textSize="18sp"
            android:textStyle="bold"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.059"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.506" />

        <Button
            android:id="@+id/Buttn_Exit"
            android:layout_width="175dp"
            android:layout_height="39dp"
            android:background="@drawable/shape"
            android:text="@string/exit"
            android:textSize="18sp"
            android:textStyle="bold"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.932"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintVertical_bias="0.493" />
    </androidx.constraintlayout.widget.ConstraintLayout>

</androidx.constraintlayout.widget.ConstraintLayout>
<!--
package com.example.ict202_mobileappsdevt;

import androidx.appcompat.app.AppCompatActivity;
import android.content.DialogInterface;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AlertDialog;
import java.text.DecimalFormat;

public class GPA_Cal extends AppCompatActivity {
    double GPA,TPoints;
    int CHours;
    Button btnAdd,btnCal,btnNew,btnExit;
    EditText txtScore,txtCHours;
    TextView txtResult;
    RadioButton rbtDip,rbtBTech;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_gpa_cal);
        getSupportActionBar().hide();

        btnAdd = findViewById(R.id.btnAdd);
        btnCal = findViewById(R.id.btnCalculate);
        btnNew = findViewById(R.id.btnNew);
        btnExit = findViewById(R.id.btnExit);

        txtResult = findViewById(R.id.txtresults);
        txtScore = findViewById(R.id.txtScore);
        txtCHours = findViewById(R.id.txtChours);

        rbtDip = findViewById(R.id.rbtHND);
        rbtBTech = findViewById(R.id.rbtBTech);

        btnCal.setVisibility(View.INVISIBLE);
        txtResult.setVisibility(View.INVISIBLE);
        rbtDip.setChecked(true);

        txtScore.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {

            }

            @Override
            public void afterTextChanged(Editable s) {
                if (txtScore.getText().length() != 0 ) {
                    int a = Integer.parseInt(txtScore.getText().toString());
                    if ((a<0) || (a>100)) {
                        Toast.makeText(GPA_Cal.this, "Invalid Exams Score", Toast.LENGTH_LONG).show();
                        btnAdd.setEnabled(false);
                        txtScore.setFocusable(true);
                    }
                    else{
                        btnAdd.setEnabled(true);
                    }
                }
            }
        });
        txtCHours.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {

            }

            @Override
            public void afterTextChanged(Editable s) {
                if (txtCHours.getText().length() !=0) {
                    int h = Integer.parseInt(txtCHours.getText().toString());
                    if ((h<1) || (h>6)) {
                        Toast.makeText(GPA_Cal.this, "Invalid Credit Hours \nCredit hours should be between 1 - 6", Toast.LENGTH_LONG).show();
                        btnAdd.setEnabled(false);
                        txtCHours.requestFocus();
                    }else{
                        btnAdd.setEnabled(true);
                    }
                }
            }
        });

        btnAdd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (txtScore.getText().length() !=0 && txtCHours.getText().length() !=0){   // 1 mark
                    int hours = Integer.parseInt(txtCHours.getText().toString());
                    double mark = Double.parseDouble(txtScore.getText().toString());    // 1 mark
                    double GPoint = CheckGradePoint(mark);
                    CHours += hours;
                    TPoints += (GPoint * hours);
                    txtCHours.setText("");
                    txtScore.setText("");
                    txtScore.requestFocus();
                    btnCal.setVisibility(View.VISIBLE);
                    if (rbtDip.isChecked()){
                        rbtBTech.setEnabled(false);
                    }else{
                        rbtDip.setEnabled(false);
                    }
                }else{
                    Toast.makeText(GPA_Cal.this, "All fields are mandatory", Toast.LENGTH_LONG).show();
                }
            }
        });
        btnCal.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (txtScore.getText().length() != 0 && txtCHours.getText().length() != 0) {
                    AlertDialog.Builder builder = new AlertDialog.Builder(GPA_Cal.this);
                    builder.setMessage("Do you want to add this score?")
                            .setCancelable(false)
                            .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                                @Override
                                public void onClick(DialogInterface dialog, int which) {
                                    int hours = Integer.parseInt(txtCHours.getText().toString());
                                    double mark = Double.parseDouble(txtScore.getText().toString());
                                    double GPoint = CheckGradePoint(mark);
                                    CHours += hours;
                                    TPoints += (GPoint * hours);
                                    txtCHours.setText("");
                                    txtScore.setText("");
                                    txtScore.requestFocus();
                                    //btnAdd.setOnClickListener;
                                    CalDisplay();
                                }
                            })
                            .setNegativeButton("No", new DialogInterface.OnClickListener() {
                                @Override
                                public void onClick(DialogInterface dialog, int i) {
                                    CalDisplay();
                                }
                            });
                    AlertDialog alert = builder.create();
                    alert.setTitle("Adding...");
                    alert.show();
                } else {
                    CalDisplay();
                }
            }
        });
        btnNew.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtScore.setText("");
                txtCHours.setText("");
                btnCal.setEnabled(true);
                btnCal.setVisibility(View.INVISIBLE);
                txtResult.setVisibility(View.INVISIBLE);
                btnAdd.setEnabled(true);
                txtScore.requestFocus();
                rbtBTech.setEnabled(true);
                rbtDip.setEnabled(true);
            }
        });
        btnExit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                AlertDialog.Builder builder = new AlertDialog.Builder(GPA_Cal.this);
                builder.setMessage("Do you want to close App?...")
                        .setCancelable(false)
                        .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                System.exit(1);
                            }
                        })
                        .setNegativeButton("No", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                //Nothing
                            }
                        });
                AlertDialog alert = builder.create();
                alert.setTitle("Exit Application");
                alert.show();
            }
        });
    }
    public double CheckGradePoint(double Score) {
        if (rbtDip.isChecked()) {
            double mm = Double.parseDouble(txtScore.getText().toString());
            if (mm >= 85)
                return 5.00;
            else if (mm >= 80)
                return 4.50;
            else if (mm >= 75)
                return 4.00;
            else if (mm >= 70)
                return 3.50;
            else if (mm >= 65)
                return 3.00;
            else if (mm >= 60)
                return 2.50;
            else if (mm >= 55)
                return 2.00;
            else if (mm >= 50)
                return 1.50;
            else
                return 0.00;
        } else {
            double mm = Double.parseDouble(txtScore.getText().toString());
            if (mm >= 80)
                return 4.00;
            else if (mm >= 75)
                return 3.50;
            else if (mm >= 70)
                return 3.00;
            else if (mm >= 65)
                return 2.50;
            else if (mm >= 60)
                return 2.00;
            else if (mm >= 55)
                return 1.50;
            else if (mm >= 50)
                return 1.00;
            else if (mm >= 45)
                return 1.00;
            else
                return 0.00;
        }
    }
    public void CalDisplay(){
        DecimalFormat df = new DecimalFormat("0.00");
        GPA = TPoints/CHours;
        String GClass;
        if (rbtDip.isChecked()){
            if (GPA >= 4.00)
                GClass = "First Class";
            else if (GPA >= 3.0)
                GClass = "Second Class (Upper Division)";
            else if (GPA >= 2.0)
                GClass = "Second  Class (Lower Division)";
            else if (GPA >= 1.50)
                GClass = "Pass";
            else
                GClass = "Fail";
        }else{
            if (GPA >= 3.75)
                GClass = "First Class";
            else if (GPA >= 3.35)
                GClass = "Second Class (Upper Division)";
            else if (GPA >= 2.51)
                GClass = "Second  Class (Lower Division)";
            else if (GPA >= 2.01)
                GClass = "Third Class";
            else if (GPA >= 1.00)
                GClass = "Pass";
            else
                GClass = "Fail";
        }
        txtResult.setText("Your Final GPA is "+ df.format(GPA) + "\nClass - " + GClass);
        txtResult.setVisibility(View.VISIBLE);
        btnAdd.setEnabled(false);
        btnCal.setEnabled(false);
    }
}
-->